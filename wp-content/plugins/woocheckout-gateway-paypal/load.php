<?php

class Load
{
  public static $instance;

  public static function get_instance()
  {
    if (self::$instance === null) {
      self::$instance = new self();
    }
    return self::$instance;
  }

  /**
   * Class constructor
   */
  public function __construct()
  {
    $this->init();
  }

  public function init()
  {
    // Requires path file
    require_once WOOCHECKOUT_GATEWAY_PAYPAL_PLUGIN_PATH . './classes/class-gateway-paypal.php';

    // Add Gateway
    add_filter('woocommerce_payment_gateways', [$this, 'add_gateways']);
    add_filter('pre_update_option_woocommerce_stripe_settings', [$this, 'gateway_settings_update'], 10, 2);

    // Show action in plugin page
    add_filter('plugin_action_links_' . WOOCHECKOUT_GATEWAY_PAYPAL_BASENAME, [$this, 'plugin_action_links']);
    add_filter('plugin_row_meta', [$this, 'plugin_row_meta'], 10, 2);

    // Modify emails emails.
    add_filter('woocommerce_email_classes', [$this, 'add_emails'], 20);
  }

  /**
   * Add the gateways to WooCommerce.
   *
   * @since 1.0.0
   * @version 1.0.0
   */
  public function add_gateways($methods)
  {
    $methods[] = Gateway_Paypal::class;
    return $methods;
  }

  /**
   * Adds the failed SCA auth email to WooCommerce.
   *
   * @param WC_Email[] $email_classes All existing emails.
   * @return WC_Email[]
   */
  public function add_emails($email_classes)
  {
    // require_once WC_STRIPE_PLUGIN_PATH . '/includes/compat/class-wc-stripe-email-failed-authentication.php';
    // require_once WC_STRIPE_PLUGIN_PATH . '/includes/compat/class-wc-stripe-email-failed-renewal-authentication.php';
    // require_once WC_STRIPE_PLUGIN_PATH . '/includes/compat/class-wc-stripe-email-failed-preorder-authentication.php';
    // require_once WC_STRIPE_PLUGIN_PATH . '/includes/compat/class-wc-stripe-email-failed-authentication-retry.php';

    // // Add all emails, generated by the gateway.
    // $email_classes['WC_Stripe_Email_Failed_Renewal_Authentication']  = new WC_Stripe_Email_Failed_Renewal_Authentication($email_classes);
    // $email_classes['WC_Stripe_Email_Failed_Preorder_Authentication'] = new WC_Stripe_Email_Failed_Preorder_Authentication($email_classes);
    // $email_classes['WC_Stripe_Email_Failed_Authentication_Retry']    = new WC_Stripe_Email_Failed_Authentication_Retry($email_classes);

    // return $email_classes;
  }

  public function gateway_settings_update() {
    
  }

  /**
   * Add plugin action links.
   *
   * @since 1.0.0
   * @version 1.0.0
   */
  public function plugin_action_links($links)
  {
    $plugin_links = [
      '<a href="admin.php?page=wc-settings&tab=checkout&section=misha">' . esc_html__('Settings', 'woocommerce-gateway-stripe') . '</a>',
    ];
    return array_merge($plugin_links, $links);
  }

  /**
   * Add plugin action links.
   *
   * @since 1.0.0
   * @param array  $links Original list of plugin links.
   * @param string $file  Name of current file.
   * @return array  $links Update list of plugin links.
   */
  public function plugin_row_meta($links, $file)
  {
    if (WOOCHECKOUT_GATEWAY_PAYPAL_BASENAME === $file) {
      $row_meta = [
        'docs'    => '<a href="' . esc_url(apply_filters('woocommerce_gateway_stripe_docs_url', 'https://woocommerce.com/document/stripe/')) . '" title="' . esc_attr(__('View Documentation', 'woocommerce-gateway-stripe')) . '">' . __('Docs', 'woocommerce-gateway-stripe') . '</a>',
        'support' => '<a href="' . esc_url(apply_filters('woocommerce_gateway_stripe_support_url', 'https://woocommerce.com/my-account/create-a-ticket?select=18627')) . '" title="' . esc_attr(__('Open a support request at WooCommerce.com', 'woocommerce-gateway-stripe')) . '">' . __('Support', 'woocommerce-gateway-stripe') . '</a>',
      ];
      return array_merge($links, $row_meta);
    }
    return (array) $links;
  }
}
